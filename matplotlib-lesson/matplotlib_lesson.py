import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from mpl_toolkits.mplot3d import Axes3D


date = pd.date_range(start='2021-09-01', freq='D', periods=8)
fig, axs = plt.subplots(figsize=(10, 4))
axs.plot(date, [23, 17, 17, 16, 15, 14, 17, 20], label='day temperature')
axs.plot(date, [19, 11, 16, 11, 10, 10, 11, 16], label='night temperature')
axs.plot(date, [20, 15, 23, 5, 7, 20, 41, -2], label='morning temperature')
plt.xlabel('–î–∞—Ç–∞', fontsize='small', color='midnightblue')
plt.ylabel('–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞', fontsize='small', color='midnightblue')
plt.title('–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –º. –ü–æ–ª—Ç–∞–≤–∞', fontsize=15)
plt.text(date[0], 15, '–û—Å—ñ–Ω—å –¥–æ—Å–∏—Ç—å —Ç–µ–ø–ª–∞', color="blue")
plt.text(date[0], 21, '–î—Ä—É–≥–∞ –ª—ñ–Ω—ñ—è', color="blue")
plt.text(date[0], 10, '–¢—Ä–µ—Ç—è –ª—ñ–Ω—ñ—è', color="green")

plt.legend()
plt.show()

print("********************************************\n")
print("–Ø–∫—â–æ –ø–æ–¥—ñ–ª–∏—Ç–∏ –≥—Ä–∞—Ñ—ñ–∫–∏, —Ç–æ: fig, axs = plt.subplots(2, 1, figsize=(10, 6)): \n")
date = pd.date_range(start='2021-09-01', freq='D', periods=8)
fig, axs = plt.subplots(2, 1, figsize=(10, 6))

axs[0].plot(date, [23, 17, 17, 16, 15, 14, 17, 20], label='day temperature')
axs[1].plot(date, [19, 11, 16, 11, 10, 10, 11, 16], label='night temperature')

axs[0].set_title('–î–µ–Ω–Ω–∞', fontsize=10)
axs[1].set_title('–ù—ñ—á–Ω–∞', fontsize=10)

fig.suptitle('–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –º. –ü–æ–ª—Ç–∞–≤–∞', fontsize=15)

plt.show()

print("********************************************\n")
print("""–Ø–∫—â–æ —É–ø—Ä–∞–≤–ª—è—Ç–∏ —Å—Ç–∏–ª–µ–º –≥—Ä–∞—Ñ—ñ–∫—ñ–≤, —Ç–æ:
plt.plot(date, [<num>, <num>...], label="...",
linestyle=": ", color=' ',""")

date = pd.date_range(start="2021-09-01", freq="D", periods=8)
plt.figure(figsize=(10, 4))  # –ó–±—ñ–ª—å—à–µ–Ω–Ω—è —à–∏—Ä–∏–Ω–∏ –≥—Ä–∞—Ñ—ñ–∫–∞ –¥–æ 10 –¥—é–π–º—ñ–≤
plt.plot(
    date,
    [23, 17, 17, 16, 15, 14, 17, 20],
    label="day temperature",
    linestyle="--",
    color="#FF5733",
)
plt.plot(
    date,
    [19, 11, 16, 11, 10, 10, 11, 16],
    label="night temperature",
    linestyle="-.",
    color="#061358",
)
plt.xlabel("–î–∞—Ç–∞", fontsize="small", color="midnightblue")
plt.ylabel("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", fontsize="small", color="midnightblue")
plt.title("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –º. –ü–æ–ª—Ç–∞–≤–∞", fontsize=15)
plt.legend()
plt.show()
print("********************************************\n")

date = pd.date_range(start="2021-09-01", freq="H", periods=8)
print("This is data pd.data_range: \n", date)
plt.plot(
    date,
    [23, 17, 17, 16, 15, 14, 17, 20],
    label="day temperature",
    linestyle="-.",
    color="#FF5733",
    linewidth=2,
    marker="D",
)
plt.plot(
    date,  # –¥–∞—Ç–∞—Å–µ—Ç –∑ —è–∫–∏–º –ø—Ä–∞—Ü—é—î–º–æ
    [19, 11, 16, 11, 10, 10, 11, 16],
    label="night temperature",
    linestyle=":",  # —Å—Ç–∏–ª—å –ª—ñ–Ω—ñ—ó
    color="#061358",
    linewidth=3,  # —Ç–æ–≤—â–∏–Ω–∞ –ª—ñ–Ω—ñ—ó
    marker="*",  # –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –º–∞—Ä–∫–µ—Ä–∞
)
plt.ylim(0, 25)  # –û—Å—Ç–∞—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
plt.xlabel("–î–∞—Ç–∞", fontsize="small", color="midnightblue")
plt.ylabel("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", fontsize="small", color="midnightblue")
plt.title("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –º. –ü–æ–ª—Ç–∞–≤–∞", fontsize=15)
plt.legend()
plt.grid()  # –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—ñ—Ç–∫–∏
plt.show()
print("********************************************\n")

plt.bar(
    ["–°–®–ê", "–ö–∏—Ç–∞–π", "–Ø–ø–æ–Ω—ñ—è", "–í–µ–ª–∏–∫–∞ –ë—Ä–∏—Ç–∞–Ω—ñ—è"],
    [39, 38, 27, 22],
    color=["b", "r", "y", "g"],
)

plt.xlabel("–ö—Ä–∞—ó–Ω–∞", fontsize="small", color="midnightblue")
plt.ylabel("–ö—ñ–ª—å–∫—ñ—Å—Ç—å", fontsize="small", color="midnightblue")
plt.title("–ó–æ–ª–æ—Ç—ñ –º–µ–¥–∞–ª—ñ: –õ—ñ—Ç–Ω—è –æ–ª—ñ–º–ø—ñ–∞–¥–∞ –¢–æ–∫—ñ–æ 2020", fontsize=15)
plt.show()
print("********************************************\n")


countries = ["–°–®–ê", "–ö–∏—Ç–∞–π", "–Ø–ø–æ–Ω—ñ—è", "–í–µ–ª–∏–∫–∞ –ë—Ä–∏—Ç–∞–Ω—ñ—è", "–£–∫—Ä–∞—ó–Ω–∞"]
counts = [39, 38, 27, 22, 88]
colors = ["b", "r", "y", "g", "c"]

bars = plt.bar(
    countries,
    counts,
    color=colors,
    width=0.6
)

# –î–æ–¥–∞—Ç–∏ —à—Ç—Ä–∏—Ö—É–≤–∞–Ω–Ω—è –¥–æ –ø–µ–≤–Ω–æ–≥–æ —Å—Ç–æ–≤–±—á–∏–∫–∞
bars[0].set_hatch("|")
bars[1].set_hatch("/")
bars[2].set_hatch("-")  # –î–æ–¥–∞—î–º–æ —à—Ç—Ä–∏—Ö—É–≤–∞–Ω–Ω—è –¥–æ —Ç—Ä–µ—Ç—å–æ–≥–æ —Å—Ç–æ–≤–±—á–∏–∫–∞ (–Ø–ø–æ–Ω—ñ—è)
bars[3].set_hatch("o")
bars[4].set_hatch("X")


plt.xlabel("–ö—Ä–∞—ó–Ω–∞", fontsize="small", color="midnightblue")
plt.ylabel("–ö—ñ–ª—å–∫—ñ—Å—Ç—å", fontsize="small", color="midnightblue")
plt.title("–ó–æ–ª–æ—Ç—ñ –º–µ–¥–∞–ª—ñ: –õ—ñ—Ç–Ω—è –æ–ª—ñ–º–ø—ñ–∞–¥–∞ –¢–æ–∫—ñ–æ 2020", fontsize=15)
plt.show()
print("********************************************\n")


labels = [
    "Junior Software Engineer",
    "Senior Software Engineer",
    "Software Engineer",
    "System Architect",
    "Technical Lead",
]

data = [63, 31, 100, 2, 11]
explode = [0.15, 0.18, 0.18, 0.13, 0.1]
plt.pie(
    data,
    labels=labels,
    shadow=False,
    explode=explode,
    autopct="%.2f%%",
    pctdistance=1.15,
    labeldistance=1.3,
)

plt.show()
print("********************************************\n")

print(f"–î—ñ–∞–≥—Ä–∞–º–∏ –≤ –ø–æ–ª—è—Ä–Ω–∏—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö\n")

# –î–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞ –≤ –ø–æ–ª—è—Ä–Ω–∏—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö (r,Œ∏) –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –º–µ—Ç–æ–¥ polar,
# –≤ —è–∫–∏–π –ø–µ—Ä–µ–¥–∞—é—Ç—å—Å—è –∞—Ä–≥—É–º–µ–Ω—Ç–∏ theta (–Ω–µ–∑–∞–ª–µ–∂–Ω–∞ –∑–º—ñ–Ω–Ω–∞) —ñ r.

print('–≥—Ä–∞—Ñ—ñ–∫ –ø–æ–ª—è—Ä–Ω–æ—ó —Ç—Ä–æ—è–Ω–¥–∏: r(Œ∏)=sin‚Å°(6‚ãÖŒ∏)\n')

theta = np.linspace(0, 2.0 * np.pi, 1000)

r = np.sin(9 * theta)
plt.polar(theta, r, color="c", linestyle='--',
          linewidth=2,
          #         marker='x',
          #         markersize=3,
          #         alpha=0.75
          )
plt.show()

print("********************************************\n")

print(f"–¢—Ä–∏–≤–∏–º—ñ—Ä–Ω—ñ –≥—Ä–∞—Ñ—ñ–∫–∏ \n")

fig = plt.figure()
ax = fig.add_subplot(projection="3d")

theta_max = 8 * np.pi
n = 1000
theta = np.linspace(0, theta_max, n)
x = theta
z = np.sin(theta)
y = np.cos(theta)
ax.plot(x, y, z, "r")

plt.show()
print("********************************************\n")

fig = plt.figure()  # —Å—Ç–≤–æ—Ä–Ω–µ–Ω–Ω—è —Ñ—ñ–≥—É—Ä–∏
ax = fig.add_subplot(projection="3d")  # –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç—Ä–∏–≤–∏–º—ñ—Ä–Ω–æ—ó –ø—Ä–æ—î–∫—Ü—ñ—ó

x = [5, 10, 15, 20, 4, 55, 33]
z = [10, 0, 5, 15, 76, 22, 11]
y = [0, 10, 5, 25, 34, 99, 44]
s = [150, 130, 30, 160, 200, 22, 78]
ax.scatter(x, y, z, s=s)  # —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥—ñ–∞–≥—Ä–∞–º–∏ —Ä–æ–∑—Å—ñ—é–≤–∞–Ω–Ω—è

plt.show()
print("********************************************\n")

print(f"–ö–∞—Ä–∫–∞—Å–Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω—è\n")

fig = plt.figure()
ax = fig.add_subplot(projection="3d")

grid = np.arange(-10, 10, 0.5)  # —Å–≤–æ—Ä–µ–Ω–Ω—è –º–∞—Å–∏–≤—É –∑–Ω–∞—á–µ–Ω—å
x, y = np.meshgrid(grid, grid)  # —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–≤–æ–≤–∏–º—ñ—Ä–Ω–æ—ó —Å—ñ—Ç–∫–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
# –û–±—á–∏—Å–ª—é—î –∑–Ω–∞—á–µ–Ω–Ω—è z –¥–ª—è –∫–æ–∂–Ω–æ—ó –ø–∞—Ä–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç x —ñ y –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ñ—É–Ω–∫—Ü—ñ—ó ùëß=ùë•2‚ãÖùë¶2+2.
z = x ** 2 * y ** 2 + 2

# –°—Ç–≤–æ—Ä—é—î —Ç—Ä–∏–≤–∏–º—ñ—Ä–Ω–∏–π –∫–∞—Ä–∫–∞—Å–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∑–Ω–∞—á–µ–Ω—å x,y,z
# ax.plot_wireframe(x, y, z)
ax.plot_surface(x, y, z)  # –ø–æ–±—É–¥–æ–≤–∞ –ø–æ–≤—Ä—Ö–Ω—ñ

plt.show()
print("********************************************\n")
